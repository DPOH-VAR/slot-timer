{"version":3,"sources":["static/alarm.mp3","actionCreators/addSlotTime.js","constants/actions.js","actionCreators/clearSlot.js","actionCreators/closeSlotOptionsModal.js","actionCreators/openOptionsModal.js","actionCreators/setSlotTime.js","selectors/selectors.js","HOCs/injectDate.js","components/Alarm.js","actionCreators/closeOptionsModal.js","actionCreators/setEventDescription.js","actionCreators/setEventLocation.js","actionCreators/setEventTitle.js","actionCreators/setSlotsCount.js","components/OptionsModal.js","actionCreators/openSlotOptionsModal.js","components/Slot.js","util/timeFormat.js","components/SlotOptionsModal.js","components/Slots.js","components/Main.js","reducers/optionsReducer.js","reducers/slotOptionsModalReducer.js","reducers/reducer.js","reducers/slotsReducer.js","reducers/slotReducer.js","App.js","localStorage.js","actionCreators/updateState.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","addSlotTime","index","time","type","payload","clearSlot","closeSlotOptionsModal","openOptionsModal","setSlotTime","getSlots","state","slots","getSlotsCount","createSelector","length","getSlotOptionsModalIndex","slotOptionsModal","getSlotOptionsModalSlot","getSlotDates","map","slot","date","filter","_","getSlotOptionsModalSlotDateText","Date","y","String","getUTCFullYear","padStart","m","getUTCMonth","d","getUTCDate","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","concat","getOptions","options","getSlotOptionsQrCodeData","dateText","title","location","description","replace","getOptionsModalOpened","opened","dateUpdateHandlers","Set","injectDate","dateProp","arguments","undefined","Cmp","_Component","InjectDateComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateDate","setState","now","inherits","createClass","key","value","add","delete","objectSpread","defineProperty","react_default","a","createElement","Component","setInterval","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","handler","err","return","Alarm","audioRef","React","createRef","lastAlarmDate","click","openSlotOptionsModal","src","audioSrc","preload","ref","controls","prevProps","prevState","snapshot","Math","max","apply","toConsumableArray","dates","alarm","current","currentTime","play","PureComponent","connect","closeOptionsModal","setEventDescription","count","setEventLocation","setEventTitle","setSlotsCount","OptionsModal","addSlot","slotsCount","removeSlot","setTitle","event","target","setDescription","setLocation","stopPropagation","close","_this$props","onClick","className","classNames","open","onChange","dispatch","bindActionCreators","Slot","Slot_SlotWithTime","Slot_EmptySlot","SlotWithTime","_PureComponent","_this$props2","dateDiff","slotWait","slotLate","slotDisplayTime","sec","displaySec","min","timeFormat","abs","late","wait","EmptySlot","_ref","SlotOptionsModal","canvasRef","toggleZoom","zoom","addTime","setTime","qrCodeData","modalOpen","components_Slot","disabled","QRCode","toCanvas","Slots","Main","onKeyDown","ctrlKey","keyCode","react","components_Slots","components_SlotOptionsModal","components_OptionsModal","components_Alarm","window","document","body","addEventListener","removeEventListener","defaultState","combine","combineReducers","slotsState","Array","fill","action","slotState","slotReducer","newSlotsState","slotOptionsModalState","optionsModalState","composeEnhancers","compose","store","createStore","data","localStorage","getItem","JSON","parse","e","console","error","loadState","applyMiddleware","newValue","subscribe","stringify","setItem","saveState","getState","App","es","components_Main","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.285e45ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.79cbb19b.mp3\";","import {ADD_SLOT_TIMEOUT} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index, time){\r\n\treturn {type: ADD_SLOT_TIMEOUT, payload: {index, time}};\r\n}","export const STATE = \"STATE\";\r\nexport const SET_SLOT = \"SET_SLOT\";\r\nexport const SET_SLOTS_COUNT = \"SET_SLOTS_COUNT\";\r\nexport const ADD_SLOT_TIMEOUT = \"ADD_SLOT_TIMEOUT\";\r\nexport const SET_SLOT_TIMEOUT = \"SET_SLOT_TIMEOUT\";\r\nexport const CLEAR_SLOT = \"CLEAR_SLOT\";\r\nexport const OPEN_SLOT_OPTIONS_MODAL = \"OPEN_SLOT_OPTIONS_MODAL\";\r\nexport const CLOSE_SLOT_OPTIONS_MODAL = \"CLOSE_SLOT_OPTIONS_MODAL\";\r\nexport const OPEN_OPTIONS_MODAL = \"OPEN_OPTIONS_MODAL\";\r\nexport const CLOSE_OPTIONS_MODAL = \"CLOSE_OPTIONS_MODAL\";\r\nexport const SET_EVENT_TITLE = \"SET_EVENT_TITLE\";\r\nexport const SET_EVENT_DESCRIPTION = \"SET_EVENT_DESCRIPTION\";\r\nexport const SET_EVENT_LOCATION = \"SET_EVENT_LOCATION\";","import {CLEAR_SLOT} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index){\r\n\treturn {type: CLEAR_SLOT, payload: {index}};\r\n}","import {CLOSE_SLOT_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\n\r\nexport default function(){\r\n\treturn {type: CLOSE_SLOT_OPTIONS_MODAL};\r\n}","import {OPEN_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index){\r\n\treturn {type: OPEN_OPTIONS_MODAL, payload: index};\r\n}","import {SET_SLOT_TIMEOUT} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index, time){\r\n\treturn {type: SET_SLOT_TIMEOUT, payload: {index, time}};\r\n}","import { createSelector } from \"reselect\";\r\n\r\n\r\nexport const getSlots = state => state.slots;\r\nexport const getSlotsCount = createSelector([getSlots], slots => slots.length );\r\nexport const getSlotOptionsModalIndex = state => state.slotOptionsModal.index;\r\nexport const getSlotOptionsModalSlot = createSelector([getSlots, getSlotOptionsModalIndex], (slots ,index) => slots[index]);\r\nexport const getSlotDates = createSelector([getSlots], slots => slots.map(slot => slot ? slot.date : 0).filter(_=>_));\r\nexport const getSlotOptionsModalSlotDateText = createSelector([getSlotOptionsModalSlot], slot => {\r\n\tif (!slot || !slot.date) return '';\r\n\tconst date = new Date(slot.date);\r\n\tconst y = String(date.getUTCFullYear()).padStart(4, '0');\r\n\tconst m = String(date.getUTCMonth() + 1).padStart(2, '0');\r\n\tconst d = String(date.getUTCDate()).padStart(2, '0');\r\n\tconst hh = String(date.getUTCHours()).padStart(2, '0');\r\n\tconst mm = String(date.getUTCMinutes()).padStart(2, '0');\r\n\tconst ss = String(date.getUTCSeconds()).padStart(2, '0');\r\n\treturn `${y}${m}${d}T${hh}${mm}${ss}Z`;\r\n});\r\n\r\nconst eventTitle = \"Не забудьте забрать ребенка\";\r\nconst eventDescription = \"Спасибо, что посещаете наш центр. Не забудьте забрать ребенка\";\r\nconst eventLocation = \"Детский центр \\\"Панда\\\"\";\r\n\r\nexport const getOptions = state => state.options;\r\n\r\nexport const getSlotOptionsQrCodeData = createSelector(\r\n\t[getSlotOptionsModalSlot, getSlotOptionsModalIndex, getSlotOptionsModalSlotDateText, getOptions],\r\n\t(slot, index, dateText, options) => {\r\n\t\tif (!slot || !slot.date) return '';\r\n\t\treturn `\r\n\t\t\tBEGIN:VEVENT\r\n\t\t\t\tSUMMARY:${options.title}\r\n\t\t\t\tLOCATION:${options.location}\r\n\t\t\t\tDESCRIPTION:${options.description}\r\n\t\t\t\tDTSTART:${dateText}\r\n\t\t\t\tDTEND:${dateText}\r\n\t\t\t\tBEGIN:VALARM\r\n\t\t\t        TRIGGER;RELATED=START:-PT5M\r\n\t\t\t        ACTION:DISPLAY\r\n\t\t\t        DESCRIPTION:Reminder\r\n\t\t\t\tEND:VALARM\r\n\t\t\tEND:VEVENT\r\n\t\t`.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g, \"\").replace(/\\n\\s*/g, \"\\n\");\r\n\t},\r\n);\r\n\r\n\r\nexport const getOptionsModalOpened = createSelector([getOptions], options => options.opened);","import React, {Component} from 'react';\r\n\r\nconst dateUpdateHandlers = new Set();\r\n\r\nexport default (dateProp='date') => (Cmp) => class InjectDateComponent extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdate: Date.now(),\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdateUpdateHandlers.add(this.updateDate);\r\n\t}\r\n\r\n\tupdateDate = (date) => {\r\n\t\tthis.setState({\r\n\t\t\tdate: date,\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdateUpdateHandlers.delete(this.updateDate);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst props = {...this.props, [dateProp]:this.state.date};\r\n\t\treturn (<Cmp {...props}/>);\r\n\t}\r\n}\r\n\r\nsetInterval(() => {\r\n\tfor (const handler of dateUpdateHandlers) handler(Date.now());\r\n}, 1000);","import React, {PureComponent} from \"react\";\r\nimport injectDate from \"../HOCs/injectDate\";\r\nimport {getSlotDates} from \"../selectors/selectors\";\r\nimport audioSrc from '../static/alarm.mp3'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Alarm extends PureComponent {\r\n\r\n\taudioRef = React.createRef();\r\n\tlastAlarmDate = Date.now();\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<audio src={audioSrc} preload=\"auto\" ref={this.audioRef} controls={false}/>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tconst now = Date.now();\r\n\t\tconst maxExpiredDate = Math.max(...this.props.dates.filter(date => date < now));\r\n\t\tif (maxExpiredDate > this.lastAlarmDate) {\r\n\t\t\tthis.lastAlarmDate = now;\r\n\t\t\tthis.alarm();\r\n\t\t}\r\n\t}\r\n\r\n\talarm(){\r\n\t\tthis.audioRef.current.currentTime = 0;\r\n\t\tthis.audioRef.current.play();\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslot: PropTypes.object,\r\n\t\tindex: PropTypes.number,\r\n\t\topenSlotOptionsModal: PropTypes.func,\r\n\t};\r\n\r\n\tclick = () => {\r\n\t\tthis.props.openSlotOptionsModal(this.props.index)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n\tconst dates = getSlotDates(state);\r\n\treturn {\r\n\t\tdates: dates,\r\n\t}\r\n}\r\n\r\nexport default injectDate('date')(connect(mapStateToProps)(Alarm));","import {CLOSE_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\n\r\nexport default function(){\r\n\treturn {type: CLOSE_OPTIONS_MODAL};\r\n}","import {SET_EVENT_DESCRIPTION} from \"../constants/actions\";\r\n\r\n\r\nexport default function(count){\r\n\treturn {type: SET_EVENT_DESCRIPTION, payload: count};\r\n}","import {SET_EVENT_LOCATION} from \"../constants/actions\";\r\n\r\n\r\nexport default function(count){\r\n\treturn {type: SET_EVENT_LOCATION, payload: count};\r\n}","import {SET_EVENT_TITLE} from \"../constants/actions\";\r\n\r\n\r\nexport default function(count){\r\n\treturn {type: SET_EVENT_TITLE, payload: count};\r\n}","import {SET_SLOTS_COUNT} from \"../constants/actions\";\r\n\r\n\r\nexport default function(count){\r\n\treturn {type: SET_SLOTS_COUNT, payload: count};\r\n}","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from \"redux\";\nimport closeOptionsModal from \"../actionCreators/closeOptionsModal\";\nimport setEventDescription from \"../actionCreators/setEventDescription\";\nimport setEventLocation from \"../actionCreators/setEventLocation\";\nimport setEventTitle from \"../actionCreators/setEventTitle\";\nimport setSlotsCount from \"../actionCreators/setSlotsCount\";\nimport {getSlotsCount, getOptionsModalOpened, getOptions,} from \"../selectors/selectors\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nclass OptionsModal extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tconst {slotsCount, opened, title, description, location} = this.props;\n\t\treturn (\n\t\t\t<div onClick={this.close} className={classNames(\"modalDialog\", {open: opened})}>\n\t\t\t\t<div onClick={this.stopPropagation}>\n\t\t\t\t\t<h2>Количество слотов:</h2>\n\t\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t\t<span className=\"slot-index\">{slotsCount}</span>\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-long\" onClick={this.addSlot}>+</button>\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-long\" onClick={this.removeSlot}>-</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<h2>Событие:</h2>\n\t\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t\t<span className=\"slot-time\">Название</span>\n\t\t\t\t\t\t<input className=\"input\" type=\"text\" value={title} onChange={this.setTitle} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t\t<span className=\"slot-time\">Описание</span>\n\t\t\t\t\t\t<input className=\"input\" type=\"text\" value={description} onChange={this.setDescription} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t\t<span className=\"slot-time\">Место</span>\n\t\t\t\t\t\t<input className=\"input\" type=\"text\" value={location} onChange={this.setLocation} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"btn-group center\">\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-long\" onClick={this.close} type=\"button\">\n\t\t\t\t\t\t\tЗакрыть\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\taddSlot = () => {\n\t\tthis.props.setSlotsCount(this.props.slotsCount + 1);\n\t};\n\n\tremoveSlot = () => {\n\t\tthis.props.setSlotsCount(this.props.slotsCount - 1);\n\t};\n\n\tsetTitle = (event) => {\n\t\tthis.props.setEventTitle(event.target.value);\n\t};\n\n\tsetDescription = (event) => {\n\t\tthis.props.setEventDescription(event.target.value);\n\t};\n\n\tsetLocation = (event) => {\n\t\tthis.props.setEventLocation(event.target.value);\n\t};\n\n\tstopPropagation = (event) => {\n\t\tevent.stopPropagation();\n\t};\n\n\tclose = () => {\n\t\tthis.props.closeOptionsModal();\n\t};\n\n\tstatic propTypes = {\n\t\tslotsCount: PropTypes.number,\n\t\tdescription: PropTypes.string,\n\t\tlocation: PropTypes.string,\n\t\ttitle: PropTypes.string,\n\t\tsetSlotsCount: PropTypes.func,\n\t\tsetEventDescription: PropTypes.func,\n\t\tsetEventLocation: PropTypes.func,\n\t\tsetEventTitle: PropTypes.func,\n\t};\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsModal);\n\nfunction mapStateToProps(state) {\n\tconst slotsCount = getSlotsCount(state);\n\tconst opened = getOptionsModalOpened(state);\n\tconst options = getOptions(state);\n\treturn {\n\t\tslotsCount: slotsCount,\n\t\topened: opened,\n\t\tdescription: options.description,\n\t\tlocation: options.location,\n\t\ttitle: options.title,\n\n\t}\n}\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\tsetSlotsCount: setSlotsCount,\n\t\tcloseOptionsModal: closeOptionsModal,\n\t\tsetEventDescription: setEventDescription,\n\t\tsetEventLocation: setEventLocation,\n\t\tsetEventTitle: setEventTitle,\n\t}, dispatch)\n}\n","import {OPEN_SLOT_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index){\r\n\treturn {type: OPEN_SLOT_OPTIONS_MODAL, payload: index};\r\n}","import React, {Component, PureComponent} from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n// import {getSlots} from \"../selectors/selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport openSlotOptionsModal from \"../actionCreators/openSlotOptionsModal\";\r\nimport injectDate from \"../HOCs/injectDate\";\r\nimport timeFormat from \"../util/timeFormat\";\r\nimport classNames from \"classnames\";\r\n\r\nclass Slot extends Component {\r\n\trender() {\r\n\t\tconst {slot, index} = this.props;\r\n\t\tif (slot && slot.date != null) {\r\n\t\t\treturn <SlotWithTime slot={slot} index={index} onClick={this.click}/>\r\n\t\t} else {\r\n\t\t\treturn <EmptySlot slot={slot} index={index} onClick={this.click}/>\r\n\t\t}\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslot: PropTypes.object,\r\n\t\tindex: PropTypes.number,\r\n\t\topenSlotOptionsModal: PropTypes.func,\r\n\t};\r\n\r\n\tclick = () => {\r\n\t\tthis.props.openSlotOptionsModal(this.props.index)\r\n\t}\r\n}\r\nexport default connect(() => ({}), mapDispatchToProps)(Slot);\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn bindActionCreators({\r\n\t\topenSlotOptionsModal: openSlotOptionsModal,\r\n\t}, dispatch)\r\n}\r\n\r\nconst SlotWithTime = injectDate('date')(class SlotWithTime extends PureComponent {\r\n\trender() {\r\n\t\tconst {slot, index, onClick} = this.props;\r\n\t\tconst dateDiff = slot && slot.date ? slot.date - this.props.date : null;\r\n\t\tconst slotWait = dateDiff != null && dateDiff > 0;\r\n\t\tconst slotLate = dateDiff != null && dateDiff <= 0;\r\n\t\tconst slotDisplayTime = !(slotWait || slotLate) ? 0 : timeFormat(Math.abs(dateDiff));\r\n\t\treturn (\r\n\t\t\t<a\r\n\t\t\t\tclassName={classNames(\"slot\", {\"late\": slotLate, \"wait\": slotWait})}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"slot-index\">{index+1}</div>\r\n\t\t\t\t{ (slotWait || slotLate) && <div className=\"slot-time\">\r\n\t\t\t\t\t{slotDisplayTime}\r\n\t\t\t\t</div>}\r\n\t\t\t</a>\r\n\t\t);\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslot: PropTypes.object,\r\n\t\tindex: PropTypes.number,\r\n\t\tdate: PropTypes.number,\r\n\t}\r\n});\r\n\r\nconst EmptySlot = ({index, onClick}) => (\r\n\t<a className=\"slot\" onClick={onClick}>\r\n\t\t<div className=\"slot-index\">{index+1}</div>\r\n\t</a>\r\n);","export default function (value){\r\n\tconst sec = value/1000|0;\r\n\tconst displaySec = String(sec%60).padStart(2, '0');\r\n\tconst min = sec/60|0;\r\n\tconst displayMin = String(min%60).padStart(2, '0');\r\n\tconst hours = min/60|0;\r\n\treturn hours + ':' + displayMin + ':' + displaySec;\r\n}","import React, {Component, createRef} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from \"redux\";\nimport addSlotTime from \"../actionCreators/addSlotTime\";\nimport clearSlot from \"../actionCreators/clearSlot\";\nimport closeSlotOptionsModal from \"../actionCreators/closeSlotOptionsModal\";\nimport setSlotTime from \"../actionCreators/setSlotTime\";\nimport injectDate from \"../HOCs/injectDate\";\nimport {\n\tgetSlotOptionsModalIndex,\n\tgetSlotOptionsModalSlot,\n\tgetSlotOptionsQrCodeData,\n} from \"../selectors/selectors\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Slot from \"./Slot\";\nimport QRCode from 'qrcode';\n\nclass SlotOptionsModal extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {zoom: false};\n\t}\n\n\tcanvasRef = createRef();\n\n\trender() {\n\t\tconst {slot, index, qrCodeData} = this.props;\n\t\tconst {zoom} = this.state;\n\t\tconst modalOpen = index != null;\n\t\tconst dateDiff = slot && slot.date ? slot.date - this.props.date : null;\n\t\tconst slotWait = dateDiff != null && dateDiff > 0;\n\t\tconst slotLate = dateDiff != null && dateDiff <= 0;\n\t\treturn (\n\t\t\t<div onClick={this.close} className={classNames(\"modalDialog\", {open: modalOpen})}>\n\t\t\t\t<div onClick={this.stopPropagation} className=\"center\">\n\t\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t\t<Slot slot={slot} index={index}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-long\" onClick={this.addTime(30*60*1000)}>+ 30:00</button>\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-long\" onClick={this.addTime(- 30*60*1000)}>- 30:00</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-tall\" onClick={this.setTime(90*60*1000)}>1:30</button>\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-tall\" onClick={this.setTime(120*60*1000)}>2:00</button>\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-tall\" onClick={this.setTime(150*60*1000)}>2:30</button>\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-tall\" onClick={this.setTime(180*60*1000)}>3:00</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-long\" onClick={this.close} type=\"button\">\n\t\t\t\t\t\t\tЗакрыть\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className=\"btn btn-blue btn-long\" onClick={this.clearSlot} disabled={!slotWait && !slotLate}>\n\t\t\t\t\t\t\tОчистить\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{ qrCodeData && <div className={classNames(\"qrcode-box zooming\", {\"zoom\": zoom})} onClick={this.toggleZoom}>\n\t\t\t\t\t\t<canvas className=\"qrcode\" ref={this.canvasRef}/>\n\t\t\t\t\t</div> }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\ttoggleZoom = () => {\n\t\tthis.setState({\n\t\t\tzoom: !this.state.zoom,\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tconst {qrCodeData} = this.props;\n\t\tif (qrCodeData) {\n\t\t\tQRCode.toCanvas(this.canvasRef.current, qrCodeData);\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tconst {qrCodeData} = this.props;\n\t\tif (qrCodeData && qrCodeData !== prevProps.qrCodeData) {\n\t\t\tQRCode.toCanvas(this.canvasRef.current, qrCodeData);\n\t\t}\n\t}\n\n\tstopPropagation = (event) => {\n\t\tevent.stopPropagation();\n\t};\n\n\taddTime = (time) => {\n\t\treturn () => {\n\t\t\tthis.props.addSlotTime(this.props.index, time);\n\t\t}\n\t};\n\n\tsetTime = (time) => {\n\t\treturn () => {\n\t\t\tthis.props.setSlotTime(this.props.index, time);\n\t\t}\n\t};\n\n\tclearSlot = () => {\n\t\tthis.props.clearSlot(this.props.index);\n\t};\n\n\tclose = () => {\n\t\tthis.props.closeSlotOptionsModal()\n\t};\n\n\tstatic propTypes = {\n\t\tslot: PropTypes.object,\n\t\tindex: PropTypes.number,\n\t\tcloseSlotOptionsModal: PropTypes.func,\n\t\tqrCodeData: PropTypes.string,\n\t\taddSlotTime: PropTypes.func,\n\t\tsetSlotTime: PropTypes.func,\n\t\tclearSlot: PropTypes.func,\n\t};\n\n}\nexport default injectDate('date')(connect(mapStateToProps, mapDispatchToProps)(SlotOptionsModal));\n\nfunction mapStateToProps(state) {\n\tconst index = getSlotOptionsModalIndex(state);\n\tconst slot = getSlotOptionsModalSlot(state);\n\tconst qrCodeData = getSlotOptionsQrCodeData(state);\n\treturn {\n\t\tindex: index,\n\t\tslot: slot,\n\t\tqrCodeData: qrCodeData,\n\t}\n}\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\tcloseSlotOptionsModal: closeSlotOptionsModal,\n\t\taddSlotTime: addSlotTime,\n\t\tsetSlotTime: setSlotTime,\n\t\tclearSlot: clearSlot,\n\t}, dispatch)\n}\n","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {getSlots} from \"../selectors/selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport Slot from \"./Slot\";\r\n\r\nclass Slots extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\r\n\t\t\t<div className=\"slots\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.slots.map((slot, index) => (\r\n\t\t\t\t\t\t<Slot key={index} slot={slot} index={index} />\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslots: PropTypes.array,\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tslots: getSlots(state),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Slots);","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from \"redux\";\r\nimport addSlotTime from \"../actionCreators/addSlotTime\";\r\nimport clearSlot from \"../actionCreators/clearSlot\";\r\nimport closeSlotOptionsModal from \"../actionCreators/closeSlotOptionsModal\";\r\nimport openOptionsModal from \"../actionCreators/openOptionsModal\";\r\nimport setSlotTime from \"../actionCreators/setSlotTime\";\r\nimport {getSlotsCount} from \"../selectors/selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport Alarm from \"./Alarm\";\r\nimport OptionsModal from \"./OptionsModal\";\r\nimport SlotOptionsModal from \"./SlotOptionsModal\";\r\nimport Slots from \"./Slots\";\r\n\r\nclass Main extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.slotsCount <= 0 ? (\r\n\t\t\t\t\t\t<div >нет слотов</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t<Slots/>\r\n\t\t\t\t\t\t\t<SlotOptionsModal/>\r\n\t\t\t\t\t\t\t<OptionsModal/>\r\n\t\t\t\t\t\t\t<Alarm/>\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.document.body.addEventListener('keydown', this.onKeyDown);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.document.body.removeEventListener('keydown', this.onKeyDown);\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslotsCount: PropTypes.number,\r\n\t};\r\n\r\n\tonKeyDown = (event) => {\r\n\t\tif (event.ctrlKey && event.keyCode === 13 /*enter*/) {\r\n\t\t\tthis.props.openOptionsModal();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tslotsCount: getSlotsCount(state),\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn bindActionCreators({\r\n\t\topenOptionsModal: openOptionsModal,\r\n\t}, dispatch)\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import {\r\n\tCLOSE_OPTIONS_MODAL,\r\n\tOPEN_OPTIONS_MODAL,\r\n\tSET_EVENT_DESCRIPTION,\r\n\tSET_EVENT_LOCATION,\r\n\tSET_EVENT_TITLE,\r\n} from \"../constants/actions\";\r\n\r\nconst defaultState = {\r\n\topened: false,\r\n\ttitle: 'Событие',\r\n\tdescription: 'Описание события',\r\n\tlocation: 'Место события',\r\n};\r\n\r\nexport default function(optionsModalState = defaultState, action){\r\n\tswitch (action.type) {\r\n\t\tcase OPEN_OPTIONS_MODAL: {\r\n\t\t\treturn {...optionsModalState, opened: true};\r\n\t\t}\r\n\t\tcase CLOSE_OPTIONS_MODAL: {\r\n\t\t\treturn {...optionsModalState, opened: false};\r\n\t\t}\r\n\t\tcase SET_EVENT_LOCATION: {\r\n\t\t\treturn {...optionsModalState, location: action.payload};\r\n\t\t}\r\n\t\tcase SET_EVENT_DESCRIPTION: {\r\n\t\t\treturn {...optionsModalState, description: action.payload};\r\n\t\t}\r\n\t\tcase SET_EVENT_TITLE: {\r\n\t\t\treturn {...optionsModalState, title: action.payload};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn optionsModalState;\r\n\t\t}\r\n\t}\r\n}","import {CLOSE_SLOT_OPTIONS_MODAL, OPEN_SLOT_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\nconst defaultState = {\r\n\tindex: null,\r\n};\r\n\r\nexport default function(slotOptionsModalState = defaultState, action){\r\n\tswitch (action.type) {\r\n\t\tcase OPEN_SLOT_OPTIONS_MODAL: {\r\n\t\t\treturn {...slotOptionsModalState, index: action.payload};\r\n\t\t}\r\n\t\tcase CLOSE_SLOT_OPTIONS_MODAL: {\r\n\t\t\treturn {...slotOptionsModalState, index: null};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn slotOptionsModalState;\r\n\t\t}\r\n\t}\r\n}","import {combineReducers} from \"redux\";\r\nimport {STATE} from \"../constants/actions\";\r\nimport optionsReducer from \"./optionsReducer\";\r\nimport slotOptionsModalReducer from \"./slotOptionsModalReducer\";\r\nimport slotsReducer from \"./slotsReducer\";\r\n\r\nconst combine = combineReducers({\r\n\tslots: slotsReducer,\r\n\tslotOptionsModal: slotOptionsModalReducer,\r\n\toptions: optionsReducer,\r\n});\r\n\r\nexport default function(state, action){\r\n\tif (action.type === STATE) return action.payload;\r\n\treturn combine(state, action);\r\n}\r\n","import {ADD_SLOT_TIMEOUT, SET_SLOT_TIMEOUT, CLEAR_SLOT, SET_SLOT, SET_SLOTS_COUNT} from \"../constants/actions\";\r\nimport slotReducer from \"./slotReducer\";\r\n\r\n\r\nexport default function(slotsState = new Array(80).fill(null), action){\r\n\tswitch (action.type) {\r\n\t\tcase ADD_SLOT_TIMEOUT:\r\n\t\tcase SET_SLOT_TIMEOUT:\r\n\t\tcase CLEAR_SLOT:\r\n\t\tcase SET_SLOT: {\r\n\t\t\treturn slotsState.map((slot, index) => (\r\n\t\t\t\tindex === action.payload.index ? slotReducer(slot, action) : slot\r\n\t\t\t));\r\n\t\t}\r\n\t\tcase SET_SLOTS_COUNT: {\r\n\t\t\tconst newSlotsState = [...slotsState];\r\n\t\t\tnewSlotsState.length = action.payload;\r\n\t\t\treturn [...newSlotsState];\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn slotsState;\r\n\t\t}\r\n\t}\r\n}","import {ADD_SLOT_TIMEOUT, SET_SLOT_TIMEOUT, CLEAR_SLOT, SET_SLOT} from \"../constants/actions\";\r\n\r\n\r\nexport default function(slotState = null, action){\r\n\tswitch (action.type) {\r\n\t\tcase SET_SLOT: {\r\n\t\t\tconst slot = slotState || {};\r\n\t\t\treturn {...action.payload.slot, slot};\r\n\t\t}\r\n\t\tcase CLEAR_SLOT: {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tcase ADD_SLOT_TIMEOUT: {\r\n\t\t\tconst slot = slotState || {};\r\n\t\t\tconst date = slot.date || Date.now();\r\n\t\t\treturn {...slot, date: date + action.payload.time};\r\n\t\t}\r\n\t\tcase SET_SLOT_TIMEOUT: {\r\n\t\t\tconst slot = slotState || {};\r\n\t\t\treturn {...slot, date: Date.now() + action.payload.time};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn slotState;\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\nimport './App.css';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport updateState from \"./actionCreators/updateState\";\nimport Main from \"./components/Main\";\nimport {loadState, localStorageKey, saveState} from \"./localStorage\";\nimport reducer from './reducers/reducer';\nimport { Provider } from 'react-redux';\n\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || compose;\nconst store = createStore(reducer, loadState(), composeEnhancers(\n    applyMiddleware()\n));\n\nwindow.addEventListener('storage', function({key, newValue}){\n    if (key !== localStorageKey) return;\n    try {\n        const data = JSON.parse(newValue);\n        store.dispatch(updateState(data));\n    } catch (e) {\n        console.error(e);\n    }\n});\n\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\nwindow.store = store;\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <Main/>\n      </Provider>\n  );\n}\n\nexport default App;\n","export const localStorageKey = 'state';\r\n\r\nexport const loadState = () => {\r\n\ttry {\r\n\t\tconst data = localStorage.getItem(localStorageKey);\r\n\t\tif (data == null) return undefined;\r\n\t\treturn JSON.parse(data);\r\n\t} catch (e) {\r\n\t\tconsole.error(e);\r\n\t\treturn undefined;\r\n\t}\r\n};\r\n\r\nexport const saveState = (state) => {\r\n\ttry {\r\n\t\tconst data = JSON.stringify(state);\r\n\t\tlocalStorage.setItem(localStorageKey, data);\r\n\t} catch (e) {\r\n\t\tconsole.error(e);\r\n\t}\r\n};","import {STATE} from \"../constants/actions\";\r\n\r\n\r\nexport default function(state){\r\n\treturn {type: STATE, payload: state};\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}