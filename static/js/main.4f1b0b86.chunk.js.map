{"version":3,"sources":["static/alarm.mp3","selectors/selectors.js","HOCs/injectDate.js","components/Alarm.js","actionCreators/addSlotTime.js","constants/actions.js","actionCreators/clearSlot.js","actionCreators/closeSlotOptionsModal.js","actionCreators/openSlotOptionsModal.js","components/Slot.js","util/timeFormat.js","components/SlotOptionsModal.js","components/Slots.js","components/Main.js","reducers/slotOptionsModalReducer.js","reducers/reducer.js","reducers/slotsReducer.js","reducers/slotReducer.js","App.js","localStorage.js","actionCreators/updateState.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getSlots","state","slots","getSlotCount","length","getSlotOptionsModalIndex","slotOptionsModal","index","getSlotDates","createSelector","map","slot","date","filter","_","dateUpdateHandlers","Set","injectDate","dateProp","arguments","undefined","Cmp","_Component","InjectDateComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateDate","setState","Date","now","inherits","createClass","key","value","add","delete","objectSpread","defineProperty","react_default","a","createElement","Component","setInterval","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","handler","err","return","Alarm","audioRef","React","createRef","lastAlarmDate","click","openSlotOptionsModal","src","audioSrc","preload","ref","controls","prevProps","prevState","snapshot","Math","max","apply","toConsumableArray","dates","alarm","current","currentTime","play","PureComponent","connect","addSlotTime","time","type","payload","clearSlot","closeSlotOptionsModal","Slot","_this$props","Slot_SlotWithTime","onClick","Slot_EmptySlot","dispatch","bindActionCreators","SlotWithTime","_PureComponent","_this$props2","dateDiff","slotWait","slotLate","slotDisplayTime","sec","displaySec","String","padStart","min","timeFormat","abs","className","classNames","late","wait","EmptySlot","_ref","timeodifierButtonsData","timeValue","SlotOptionsModal","addTime","close","_this2","modalOpen","open","components_Slot","Slots","Main","slotsCount","react","components_Slots","components_SlotOptionsModal","components_Alarm","defaultState","combine","combineReducers","slotsState","Array","fill","action","slotState","slotReducer","newSlotsState","slotOptionsModalState","composeEnhancers","window","compose","store","createStore","data","localStorage","getItem","JSON","parse","e","console","error","loadState","applyMiddleware","addEventListener","newValue","subscribe","stringify","setItem","saveState","getState","App","es","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f1b0b86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.79cbb19b.mp3\";","import { createSelector } from \"reselect\";\r\n\r\n\r\nexport const getSlots = state => state.slots;\r\nexport const getSlotCount = state => state.slots.length;\r\nexport const getSlotOptionsModalIndex = state => state.slotOptionsModal.index;\r\nexport const getSlotDates = createSelector([getSlots], slots => slots.map(slot => slot ? slot.date : 0).filter(_=>_));","import React, {Component} from 'react';\r\n\r\nconst dateUpdateHandlers = new Set();\r\n\r\nexport default (dateProp='date') => (Cmp) => class InjectDateComponent extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdate: Date.now(),\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdateUpdateHandlers.add(this.updateDate);\r\n\t}\r\n\r\n\tupdateDate = (date) => {\r\n\t\tthis.setState({\r\n\t\t\tdate: date,\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdateUpdateHandlers.delete(this.updateDate);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst props = {...this.props, [dateProp]:this.state.date};\r\n\t\treturn (<Cmp {...props}/>);\r\n\t}\r\n}\r\n\r\nsetInterval(() => {\r\n\tfor (const handler of dateUpdateHandlers) handler(Date.now());\r\n}, 1000);","import React, {PureComponent} from \"react\";\r\nimport injectDate from \"../HOCs/injectDate\";\r\nimport {getSlotDates} from \"../selectors/selectors\";\r\nimport audioSrc from '../static/alarm.mp3'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Alarm extends PureComponent {\r\n\r\n\taudioRef = React.createRef();\r\n\tlastAlarmDate = Date.now();\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<audio src={audioSrc} preload=\"auto\" ref={this.audioRef} controls={false}/>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tconst now = Date.now();\r\n\t\tconst maxExpiredDate = Math.max(...this.props.dates.filter(date => date < now));\r\n\t\tif (maxExpiredDate > this.lastAlarmDate) {\r\n\t\t\tthis.lastAlarmDate = now;\r\n\t\t\tthis.alarm();\r\n\t\t}\r\n\t}\r\n\r\n\talarm(){\r\n\t\tthis.audioRef.current.currentTime = 0;\r\n\t\tthis.audioRef.current.play();\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslot: PropTypes.object,\r\n\t\tindex: PropTypes.number,\r\n\t\topenSlotOptionsModal: PropTypes.func,\r\n\t};\r\n\r\n\tclick = () => {\r\n\t\tthis.props.openSlotOptionsModal(this.props.index)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n\tconst dates = getSlotDates(state);\r\n\treturn {\r\n\t\tdates: dates,\r\n\t}\r\n}\r\n\r\nexport default injectDate('date')(connect(mapStateToProps)(Alarm));","import {ADD_SLOT_TIME} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index, time){\r\n\treturn {type: ADD_SLOT_TIME, payload: {index, time}};\r\n}","export const STATE = \"STATE\";\r\nexport const SET_SLOT = \"SET_SLOT\";\r\nexport const SET_SLOTS_COUNT = \"SET_SLOTS_COUNT\";\r\nexport const ADD_SLOT_TIME = \"ADD_SLOT_TIME\";\r\nexport const CLEAR_SLOT = \"CLEAR_SLOT\";\r\nexport const MUTE_SLOT = \"MUTE_SLOT\";\r\nexport const OPEN_SLOT_OPTIONS_MODAL = \"OPEN_SLOT_OPTIONS_MODAL\";\r\nexport const CLOSE_SLOT_OPTIONS_MODAL = \"CLOSE_SLOT_OPTIONS_MODAL\";","import {CLEAR_SLOT} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index){\r\n\treturn {type: CLEAR_SLOT, payload: {index}};\r\n}","import {CLOSE_SLOT_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\n\r\nexport default function(){\r\n\treturn {type: CLOSE_SLOT_OPTIONS_MODAL};\r\n}","import {OPEN_SLOT_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index){\r\n\treturn {type: OPEN_SLOT_OPTIONS_MODAL, payload: index};\r\n}","import React, {Component, PureComponent} from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n// import {getSlots} from \"../selectors/selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport openSlotOptionsModal from \"../actionCreators/openSlotOptionsModal\";\r\nimport injectDate from \"../HOCs/injectDate\";\r\nimport timeFormat from \"../util/timeFormat\";\r\nimport classNames from \"classnames\";\r\n\r\nclass Slot extends Component {\r\n\trender() {\r\n\t\tconst {slot, index} = this.props;\r\n\t\tif (slot && slot.date != null) {\r\n\t\t\treturn <SlotWithTime slot={slot} index={index} onClick={this.click}/>\r\n\t\t} else {\r\n\t\t\treturn <EmptySlot slot={slot} index={index} onClick={this.click}/>\r\n\t\t}\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslot: PropTypes.object,\r\n\t\tindex: PropTypes.number,\r\n\t\topenSlotOptionsModal: PropTypes.func,\r\n\t};\r\n\r\n\tclick = () => {\r\n\t\tthis.props.openSlotOptionsModal(this.props.index)\r\n\t}\r\n}\r\nexport default connect(() => ({}), mapDispatchToProps)(Slot);\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn bindActionCreators({\r\n\t\topenSlotOptionsModal: openSlotOptionsModal,\r\n\t}, dispatch)\r\n}\r\n\r\nconst SlotWithTime = injectDate('date')(class SlotWithTime extends PureComponent {\r\n\trender() {\r\n\t\tconst {slot, index, onClick} = this.props;\r\n\t\tconst dateDiff = slot && slot.date ? slot.date - this.props.date : null;\r\n\t\tconst slotWait = dateDiff != null && dateDiff > 0;\r\n\t\tconst slotLate = dateDiff != null && dateDiff <= 0;\r\n\t\tconst slotDisplayTime = !(slotWait || slotLate) ? 0 : timeFormat(Math.abs(dateDiff));\r\n\t\treturn (\r\n\t\t\t<a\r\n\t\t\t\tclassName={classNames(\"slot\", {\"late\": slotLate, \"wait\": slotWait})}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"slot-index\">{index+1}</div>\r\n\t\t\t\t{ (slotWait || slotLate) && <div className=\"slot-time\">\r\n\t\t\t\t\t{slotDisplayTime}\r\n\t\t\t\t</div>}\r\n\t\t\t</a>\r\n\t\t);\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslot: PropTypes.object,\r\n\t\tindex: PropTypes.number,\r\n\t\tdate: PropTypes.number,\r\n\t}\r\n});\r\n\r\nconst EmptySlot = ({index, onClick}) => (\r\n\t<a className=\"slot\" onClick={onClick}>\r\n\t\t<div className=\"slot-index\">{index+1}</div>\r\n\t</a>\r\n);","export default function (value){\r\n\tconst sec = value/1000|0;\r\n\tconst displaySec = String(sec%60).padStart(2, '0');\r\n\tconst min = sec/60|0;\r\n\tconst displayMin = String(min%60).padStart(2, '0');\r\n\tconst hours = min/60|0;\r\n\treturn hours + ':' + displayMin + ':' + displaySec;\r\n}","import React, {Component, Fragment, PureComponent} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from \"redux\";\nimport addSlotTime from \"../actionCreators/addSlotTime\";\nimport clearSlot from \"../actionCreators/clearSlot\";\nimport closeSlotOptionsModal from \"../actionCreators/closeSlotOptionsModal\";\nimport openSlotOptionsModal from \"../actionCreators/openSlotOptionsModal\";\nimport injectDate from \"../HOCs/injectDate\";\nimport {getSlotOptionsModalIndex, getSlots} from \"../selectors/selectors\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Slot from \"./Slot\";\n\nconst timeodifierButtonsData = [\n\t{time: 10*1000, timeValue: '0:00:10'},\n\t{time: 30*60*1000, timeValue: '0:30:00'},\n\t{time: 60*60*1000, timeValue: '1:00:00'},\n\t{time: 90*60*1000, timeValue: '1:30:00'},\n\t{time: 120*60*1000, timeValue: '2:00:00'},\n\t{time: 150*60*1000, timeValue: '2:30:00'},\n\t{time: 180*60*1000, timeValue: '3:00:00'},\n];\n\nclass SlotOptionsModal extends Component {\n\trender() {\n\t\tconst {slot, index} = this.props;\n\t\tconst modalOpen = index != null;\n\t\tconst dateDiff = slot && slot.date ? slot.date - this.props.date : null;\n\t\tconst slotWait = dateDiff != null && dateDiff > 0;\n\t\tconst slotLate = dateDiff != null && dateDiff <= 0;\n\t\treturn (\n\t\t\t<div className={classNames(\"modalDialog\", {open: modalOpen})}>\n\t\t\t\t<div>\n\t\t\t\t\t<Slot slot={slot} index={index}/>\n\t\t\t\t\t{(slotWait || !slotLate) && <div>\n\t\t\t\t\t\t{timeodifierButtonsData.map(({time, timeValue}, key) => <div key={key}>\n\t\t\t\t\t\t\t<button onClick={this.addTime(time)}>+ {timeValue}</button>\n\t\t\t\t\t\t</div>)}\n\t\t\t\t\t</div>}\n\n\t\t\t\t\t{(slotWait || slotLate) && <div>\n\t\t\t\t\t\t<button onClick={this.clearSlot}>Очистить</button>\n\t\t\t\t\t</div>}\n\n\n\t\t\t\t\t<button onClick={this.close} type=\"button\">\n\t\t\t\t\t\tЗакрыть\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\taddTime = (time) => {\n\t\treturn () => {\n\t\t\tthis.props.addSlotTime(this.props.index, time);\n\t\t}\n\t};\n\n\tclearSlot = () => {\n\t\tthis.props.clearSlot(this.props.index);\n\t};\n\n\tclose = () => {\n\t\tthis.props.closeSlotOptionsModal()\n\t};\n\n\tstatic propTypes = {\n\t\tslot: PropTypes.object,\n\t\tindex: PropTypes.number,\n\t\tcloseSlotOptionsModal: PropTypes.func,\n\t};\n\n}\nexport default injectDate('date')(connect(mapStateToProps, mapDispatchToProps)(SlotOptionsModal));\n\nfunction mapStateToProps(state) {\n\tconst index = getSlotOptionsModalIndex(state);\n\tconst slots = getSlots(state);\n\treturn {\n\t\tindex: index,\n\t\tslot: slots[index],\n\t}\n}\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\tcloseSlotOptionsModal: closeSlotOptionsModal,\n\t\taddSlotTime: addSlotTime,\n\t\tclearSlot: clearSlot,\n\t}, dispatch)\n}\n","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {getSlots} from \"../selectors/selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport Slot from \"./Slot\";\r\n\r\nclass Slots extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\r\n\t\t\t<div className=\"slots\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.slots.map((slot, index) => (\r\n\t\t\t\t\t\t<Slot key={index} slot={slot} index={index} />\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslots: PropTypes.array,\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tslots: getSlots(state),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Slots);","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {getSlotCount} from \"../selectors/selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport Alarm from \"./Alarm\";\r\nimport SlotOptionsModal from \"./SlotOptionsModal\";\r\nimport Slots from \"./Slots\";\r\n\r\nclass Main extends Component {\r\n\trender() {\r\n\t\tif (this.props.slotsCount <= 0) {\r\n\t\t\treturn (<div>Все еще нет слотов</div>);\r\n\t\t}\r\n\t\treturn <Fragment>\r\n\t\t\t<Slots/>\r\n\t\t\t<SlotOptionsModal/>\r\n\t\t\t<Alarm/>\r\n\t\t</Fragment>\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslotsCount: PropTypes.number,\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tslotsCount: getSlotCount(state),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Main);","import {CLOSE_SLOT_OPTIONS_MODAL, OPEN_SLOT_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\nconst defaultState = {\r\n\tindex: null,\r\n};\r\n\r\nexport default function(slotOptionsModalState = defaultState, action){\r\n\tswitch (action.type) {\r\n\t\tcase OPEN_SLOT_OPTIONS_MODAL: {\r\n\t\t\treturn {...slotOptionsModalState, index: action.payload};\r\n\t\t}\r\n\t\tcase CLOSE_SLOT_OPTIONS_MODAL: {\r\n\t\t\treturn {...slotOptionsModalState, index: null};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn slotOptionsModalState;\r\n\t\t}\r\n\t}\r\n}","import {combineReducers} from \"redux\";\r\nimport {STATE} from \"../constants/actions\";\r\nimport slotOptionsModalReducer from \"./slotOptionsModalReducer\";\r\nimport slotsReducer from \"./slotsReducer\";\r\n\r\nconst combine = combineReducers({\r\n\tslots: slotsReducer,\r\n\tslotOptionsModal: slotOptionsModalReducer,\r\n});\r\n\r\nexport default function(state, action){\r\n\tif (action.type === STATE) return action.payload;\r\n\treturn combine(state, action);\r\n}\r\n","import {ADD_SLOT_TIME, CLEAR_SLOT, SET_SLOT, SET_SLOTS_COUNT} from \"../constants/actions\";\r\nimport slotReducer from \"./slotReducer\";\r\n\r\n\r\nexport default function(slotsState = new Array(80).fill(null), action){\r\n\tswitch (action.type) {\r\n\t\tcase ADD_SLOT_TIME:\r\n\t\tcase CLEAR_SLOT:\r\n\t\tcase SET_SLOT: {\r\n\t\t\treturn slotsState.map((slot, index) => (\r\n\t\t\t\tindex === action.payload.index ? slotReducer(slot, action) : slot\r\n\t\t\t));\r\n\t\t}\r\n\t\tcase SET_SLOTS_COUNT: {\r\n\t\t\tconst newSlotsState = [...slotsState];\r\n\t\t\tnewSlotsState.length = action.payload;\r\n\t\t\treturn [...newSlotsState];\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn slotsState;\r\n\t\t}\r\n\t}\r\n}","import {ADD_SLOT_TIME, CLEAR_SLOT, SET_SLOT} from \"../constants/actions\";\r\n\r\n\r\nexport default function(slotState = null, action){\r\n\tswitch (action.type) {\r\n\t\tcase SET_SLOT: {\r\n\t\t\tconst slot = slotState || {};\r\n\t\t\treturn {...action.payload.slot, slot};\r\n\t\t}\r\n\t\tcase CLEAR_SLOT: {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tcase ADD_SLOT_TIME: {\r\n\t\t\tconst slot = slotState || {};\r\n\t\t\tconst date = slot.date || Date.now();\r\n\t\t\treturn {...slot, date: date + action.payload.time};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn slotState;\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\nimport './App.css';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport updateState from \"./actionCreators/updateState\";\nimport Main from \"./components/Main\";\nimport {loadState, localStorageKey, saveState} from \"./localStorage\";\nimport reducer from './reducers/reducer';\nimport { Provider } from 'react-redux';\n\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || compose;\nconst store = createStore(reducer, loadState(), composeEnhancers(\n    applyMiddleware()\n));\n\nwindow.addEventListener('storage', function({key, newValue}){\n    if (key !== localStorageKey) return;\n    try {\n        const data = JSON.parse(newValue);\n        store.dispatch(updateState(data));\n    } catch (e) {\n        console.error(e);\n    }\n});\n\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\nwindow.store = store;\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <Main/>\n      </Provider>\n  );\n}\n\nexport default App;\n","export const localStorageKey = 'state';\r\n\r\nexport const loadState = () => {\r\n\ttry {\r\n\t\tconst data = localStorage.getItem(localStorageKey);\r\n\t\tif (data == null) return undefined;\r\n\t\treturn JSON.parse(data);\r\n\t} catch (e) {\r\n\t\tconsole.error(e);\r\n\t\treturn undefined;\r\n\t}\r\n};\r\n\r\nexport const saveState = (state) => {\r\n\ttry {\r\n\t\tconst data = JSON.stringify(state);\r\n\t\tlocalStorage.setItem(localStorageKey, data);\r\n\t} catch (e) {\r\n\t\tconsole.error(e);\r\n\t}\r\n};","import {STATE} from \"../constants/actions\";\r\n\r\n\r\nexport default function(state){\r\n\treturn {type: STATE, payload: state};\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}