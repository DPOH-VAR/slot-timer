{"version":3,"sources":["selectors/selectors.js","actionCreators/addSlotTime.js","constants/actions.js","actionCreators/clearSlot.js","actionCreators/closeSlotOptionsModal.js","actionCreators/openSlotOptionsModal.js","HOCs/injectDate.js","components/Slot.js","util/timeFormat.js","components/SlotOptionsModal.js","components/Slots.js","components/Main.js","reducers/slotOptionsModalReducer.js","reducers/reducer.js","reducers/slotsReducer.js","reducers/slotReducer.js","App.js","localStorage.js","actionCreators/updateState.js","serviceWorker.js","index.js"],"names":["getSlots","state","slots","getSlotCount","length","getSlotOptionsModalIndex","slotOptionsModal","index","addSlotTime","time","type","payload","clearSlot","closeSlotOptionsModal","openSlotOptionsModal","dateUpdateHandlers","Set","injectDate","dateProp","arguments","undefined","Cmp","_Component","InjectDateComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateDate","date","setState","Date","now","inherits","createClass","key","value","add","delete","objectSpread","defineProperty","react_default","a","createElement","Component","setInterval","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","handler","err","return","Slot","click","_this$props","slot","Slot_SlotWithTime","onClick","Slot_EmptySlot","connect","dispatch","bindActionCreators","SlotWithTime","_PureComponent","apply","_this$props2","dateDiff","slotWait","slotLate","slotDisplayTime","sec","displaySec","String","padStart","min","timeFormat","Math","abs","className","classNames","late","wait","PureComponent","EmptySlot","_ref","SlotOptionsModal","addTime","close","modalOpen","open","components_Slot","Slots","map","Main","slotsCount","react","components_Slots","components_SlotOptionsModal","defaultState","combine","combineReducers","slotsState","Array","fill","action","slotState","slotReducer","newSlotsState","toConsumableArray","slotOptionsModalState","composeEnhancers","window","compose","store","createStore","data","localStorage","getItem","JSON","parse","e","console","error","loadState","applyMiddleware","addEventListener","newValue","subscribe","stringify","setItem","saveState","getState","App","es","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kRAAaA,EAAW,SAAAC,GAAK,OAAIA,EAAMC,OAC1BC,EAAe,SAAAF,GAAK,OAAIA,EAAMC,MAAME,QACpCC,EAA2B,SAAAJ,GAAK,OAAIA,EAAMK,iBAAiBC,OCCzDC,EAAA,SAASD,EAAOE,GAC9B,MAAO,CAACC,KCDoB,gBDCCC,QAAS,CAACJ,QAAOE,UEDhCG,EAAA,SAASL,GACvB,MAAO,CAACG,KDAiB,aCACC,QAAS,CAACJ,WCDtBM,EAAA,WACd,MAAO,CAACH,KFG+B,6BGJzBI,EAAA,SAASP,GACvB,MAAO,CAACG,KHE8B,0BGFCC,QAASJ,mBCF3CQ,EAAqB,IAAIC,IAEhBC,EAAA,eAACC,EAADC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAU,OAAV,OAAqB,SAACE,GAAD,gBAAAC,GAEnC,SAAAC,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAUPQ,WAAa,SAACC,GACbR,EAAKS,SAAS,CACbD,KAAMA,KAXPR,EAAKxB,MAAQ,CACZgC,KAAME,KAAKC,OAHKX,EAFiB,OAAAC,OAAAW,EAAA,EAAAX,CAAAH,EAAAD,GAAAI,OAAAY,EAAA,EAAAZ,CAAAH,EAAA,EAAAgB,IAAA,oBAAAC,MAAA,WAUlCzB,EAAmB0B,IAAIb,KAAKI,cAVM,CAAAO,IAAA,uBAAAC,MAAA,WAoBlCzB,EAAmB2B,OAAOd,KAAKI,cApBG,CAAAO,IAAA,SAAAC,MAAA,WAwBlC,IAAMhB,EAAKE,OAAAiB,EAAA,EAAAjB,CAAA,GAAOE,KAAKJ,MAAZE,OAAAkB,EAAA,EAAAlB,CAAA,GAAoBR,EAAUU,KAAK3B,MAAMgC,OACpD,OAAQY,EAAAC,EAAAC,cAAC1B,EAAQG,OAzBiBD,EAAA,CAA2CyB,eA6B/EC,YAAY,WAAM,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAhC,EAAA,IACjB,QAAAiC,EAAAC,EAAsBvC,EAAtBwC,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,IAA0CS,EAA1CN,EAAAb,OAAkDL,KAAKC,QADtC,MAAAwB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,KAEf,0BCzBGU,6MAgBLC,MAAQ,WACPtC,EAAKD,MAAMV,qBAAqBW,EAAKD,MAAMjB,gFAhBnC,IAAAyD,EACcpC,KAAKJ,MAApByC,EADCD,EACDC,KAAM1D,EADLyD,EACKzD,MACb,OAAI0D,GAAqB,MAAbA,EAAKhC,KACTY,EAAAC,EAAAC,cAACmB,EAAD,CAAcD,KAAMA,EAAM1D,MAAOA,EAAO4D,QAASvC,KAAKmC,QAEtDlB,EAAAC,EAAAC,cAACqB,EAAD,CAAWH,KAAMA,EAAM1D,MAAOA,EAAO4D,QAASvC,KAAKmC,eAN1Cf,aAoBJqB,cAAQ,iBAAO,IAE9B,SAA4BC,GAC3B,OAAOC,YAAmB,CACzBzD,qBAAsBA,GACpBwD,IALWD,CAAwCP,GAQvD,IAAMU,EAAevD,EAAW,OAAXA,CAAA,SAAAwD,GAAA,SAAAD,IAAA,OAAA9C,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,GAAA9C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8C,GAAAE,MAAA9C,KAAAT,YAAA,OAAAO,OAAAW,EAAA,EAAAX,CAAA8C,EAAAC,GAAA/C,OAAAY,EAAA,EAAAZ,CAAA8C,EAAA,EAAAjC,IAAA,SAAAC,MAAA,WACX,IAAAmC,EACuB/C,KAAKJ,MAA7ByC,EADCU,EACDV,KAAM1D,EADLoE,EACKpE,MAAO4D,EADZQ,EACYR,QACdS,EAAWX,GAAQA,EAAKhC,KAAOgC,EAAKhC,KAAOL,KAAKJ,MAAMS,KAAO,KAC7D4C,EAAuB,MAAZD,GAAoBA,EAAW,EAC1CE,EAAuB,MAAZF,GAAoBA,GAAY,EAC3CG,EAAoBF,GAAYC,EC5CzB,SAAUtC,GACxB,IAAMwC,EAAMxC,EAAM,IAAK,EACjByC,EAAaC,OAAOF,EAAI,IAAIG,SAAS,EAAG,KACxCC,EAAMJ,EAAI,GAAG,EAGnB,OADcI,EAAI,GAAG,GACN,IAFIF,OAAOE,EAAI,IAAID,SAAS,EAAG,KAEZ,IAAMF,EDsCeI,CAAWC,KAAKC,IAAIX,IAAxB,EAClD,OACC/B,EAAAC,EAAAC,cAAA,KACCyC,UAAWC,IAAW,OAAQ,CAACC,KAAQZ,EAAUa,KAAQd,IACzDV,QAASA,GAETtB,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,cAAcjF,EAAM,IAChCsE,GAAYC,IAAajC,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,aACzCT,QAdeP,EAAA,CAA8CoB,kBA2B7DC,EAAY,SAAAC,GAAA,IAAEvF,EAAFuF,EAAEvF,MAAO4D,EAAT2B,EAAS3B,QAAT,OACjBtB,EAAAC,EAAAC,cAAA,KAAGyC,UAAU,OAAOrB,QAASA,GAC5BtB,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,cAAcjF,EAAM,KEtD/BwF,6MAgCLC,QAAU,SAACvF,GACV,OAAO,WACNgB,EAAKD,MAAMhB,YAAYiB,EAAKD,MAAMjB,MAAOE,OAI3CG,UAAY,WACXa,EAAKD,MAAMZ,UAAUa,EAAKD,MAAMjB,UAGjC0F,MAAQ,WACPxE,EAAKD,MAAMX,iGA1CH,IAAAmD,EACcpC,KAAKJ,MAApByC,EADCD,EACDC,KAAM1D,EADLyD,EACKzD,MACP2F,EAAqB,MAAT3F,EACZqE,EAAWX,GAAQA,EAAKhC,KAAOgC,EAAKhC,KAAOL,KAAKJ,MAAMS,KAAO,KAC7D4C,EAAuB,MAAZD,GAAoBA,EAAW,EAC1CE,EAAuB,MAAZF,GAAoBA,GAAY,EACjD,OACC/B,EAAAC,EAAAC,cAAA,OAAKyC,UAAWC,IAAW,cAAe,CAACU,KAAMD,KAChDrD,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACqD,EAAD,CAAMnC,KAAMA,EAAM1D,MAAOA,KACvBsE,IAAaC,IAAajC,EAAAC,EAAAC,cAAA,WAC3BF,EAAAC,EAAAC,cAAA,UAAQoB,QAASvC,KAAKoE,QAAQ,MAA9B,uCACAnD,EAAAC,EAAAC,cAAA,UAAQoB,QAASvC,KAAKoE,QAAQ,OAA9B,sCACAnD,EAAAC,EAAAC,cAAA,UAAQoB,QAASvC,KAAKoE,QAAQ,OAA9B,sCACAnD,EAAAC,EAAAC,cAAA,UAAQoB,QAASvC,KAAKoE,QAAQ,OAA9B,sCACAnD,EAAAC,EAAAC,cAAA,UAAQoB,QAASvC,KAAKoE,QAAQ,OAA9B,uCACAnD,EAAAC,EAAAC,cAAA,UAAQoB,QAASvC,KAAKhB,WAAtB,qDAECkE,GAAajC,EAAAC,EAAAC,cAAA,WACdF,EAAAC,EAAAC,cAAA,UAAQoB,QAASvC,KAAKhB,WAAtB,qDAIDiC,EAAAC,EAAAC,cAAA,UAAQoB,QAASvC,KAAKqE,MAAOvF,KAAK,UAAlC,uDAxB0BsC,aAqDhB/B,IAAW,OAAXA,CAAmBoD,YAElC,SAAyBpE,GACxB,IAAMM,EAAQF,EAAyBJ,GACjCC,EAAQF,EAASC,GACvB,MAAO,CACNM,MAAOA,EACP0D,KAAM/D,EAAMK,KAGd,SAA4B+D,GAC3B,OAAOC,YAAmB,CACzB1D,sBAAuBA,EACvBL,YAAaA,EACbI,UAAWA,GACT0D,IAf8BD,CAA6C0B,QC5DzEM,mLAEJ,OACCxD,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,oBAAYnB,KAAKJ,MAAMtB,MAAME,OAA7B,MACAyC,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,SAEb5D,KAAKJ,MAAMtB,MAAMoG,IAAI,SAACrC,EAAM1D,GAAP,OACpBsC,EAAAC,EAAAC,cAACqD,EAAD,CAAM7D,IAAKhC,EAAO0D,KAAMA,EAAM1D,MAAOA,eARxByC,aA6BLqB,kBAPf,SAAyBpE,GACxB,MAAO,CACNC,MAAOF,EAASC,KAKHoE,CAAyBgC,GC5BlCE,mLAEJ,OAAI3E,KAAKJ,MAAMgF,YAAc,EACpB3D,EAAAC,EAAAC,cAAA,4GAEFF,EAAAC,EAAAC,cAAC0D,EAAA,SAAD,KACN5D,EAAAC,EAAAC,cAAC2D,EAAD,MACA7D,EAAAC,EAAAC,cAAC4D,EAAD,cAPgB3D,aAwBJqB,kBAPf,SAAyBpE,GACxB,MAAO,CACNuG,WAAYrG,EAAaF,KAKZoE,CAAyBkC,GC7BlCK,EAAe,CACpBrG,MAAO,cCEFsG,EAAUC,YAAgB,CAC/B5G,MCFc,WAAuD,IAA9C6G,EAA8C5F,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAjC,IAAI6F,MAAM,IAAIC,KAAK,MAAOC,EAAO/F,UAAAf,OAAA,EAAAe,UAAA,QAAAC,EACrE,OAAQ8F,EAAOxG,MACd,IZH2B,gBYI3B,IZHwB,aYIxB,IZPsB,WYQrB,OAAOqG,EAAWT,IAAI,SAACrC,EAAM1D,GAAP,OACrBA,IAAU2G,EAAOvG,QAAQJ,MCPd,WAAkC,IAAzB4G,EAAyBhG,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAb,KAAM+F,EAAO/F,UAAAf,OAAA,EAAAe,UAAA,QAAAC,EAChD,OAAQ8F,EAAOxG,MACd,IbJsB,WaKrB,IAAMuD,EAAOkD,GAAa,GAC1B,OAAOzF,OAAAiB,EAAA,EAAAjB,CAAA,GAAIwF,EAAOvG,QAAQsD,KAA1B,CAAgCA,SAEjC,IbLwB,aaMvB,OAAO,KAER,IbT2B,gBaU1B,IAAMA,EAAOkD,GAAa,GACpBlF,EAAOgC,EAAKhC,MAAQE,KAAKC,MAC/B,OAAOV,OAAAiB,EAAA,EAAAjB,CAAA,GAAIuC,EAAX,CAAiBhC,KAAMA,EAAOiF,EAAOvG,QAAQF,OAE9C,QACC,OAAO0G,GDR2BC,CAAYnD,EAAMiD,GAAUjD,IAG/D,IZX6B,kBYY5B,IAAMoD,EAAa3F,OAAA4F,EAAA,EAAA5F,CAAOqF,GAE1B,OADAM,EAAcjH,OAAS8G,EAAOvG,QACvBe,OAAA4F,EAAA,EAAA5F,CAAI2F,GAEZ,QACC,OAAON,IDZTzG,iBDDc,WAAsD,IAA7CiH,EAA6CpG,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAArByF,EAAcM,EAAO/F,UAAAf,OAAA,EAAAe,UAAA,QAAAC,EACpE,OAAQ8F,EAAOxG,MACd,IVFqC,0BUGpC,OAAOgB,OAAAiB,EAAA,EAAAjB,CAAA,GAAI6F,EAAX,CAAkChH,MAAO2G,EAAOvG,UAEjD,IVJsC,2BUKrC,OAAOe,OAAAiB,EAAA,EAAAjB,CAAA,GAAI6F,EAAX,CAAkChH,MAAO,OAE1C,QACC,OAAOgH,MINJC,EAAmBC,OAAM,sCAA4CC,IACrEC,EAAQC,YHAC,SAAS3H,EAAOiH,GAC9B,MXXoB,UWWhBA,EAAOxG,KAAuBwG,EAAOvG,QAClCkG,EAAQ5G,EAAOiH,IIVE,WACxB,IACC,IAAMW,EAAOC,aAAaC,QAJG,SAK7B,GAAY,MAARF,EAAc,OAClB,OAAOG,KAAKC,MAAMJ,GACjB,MAAOK,GAER,YADAC,QAAQC,MAAMF,IDEmBG,GAAab,EAC5Cc,gBAGJb,OAAOc,iBAAiB,UAAW,SAAAzC,GAAyB,IAAfvD,EAAeuD,EAAfvD,IAAKiG,EAAU1C,EAAV0C,SAC9C,GCf2B,UDevBjG,EACJ,IACI,IAAMsF,EAAOG,KAAKC,MAAMO,GACxBb,EAAMrD,SEdN,CAAC5D,KhBJY,QgBICC,QFcakH,IAC7B,MAAOK,GACLC,QAAQC,MAAMF,MAItBP,EAAMc,UAAU,YCXS,SAACxI,GACzB,IACC,IAAM4H,EAAOG,KAAKU,UAAUzI,GAC5B6H,aAAaa,QAhBgB,QAgBSd,GACrC,MAAOK,GACRC,QAAQC,MAAMF,IDOZU,CAAUjB,EAAMkB,cAGpBpB,OAAOE,MAAQA,EAUAmB,MARf,WACE,OACIjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAUpB,MAAOA,GACf9E,EAAAC,EAAAC,cAACiG,EAAD,QGrBYC,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b87df70e.chunk.js","sourcesContent":["export const getSlots = state => state.slots;\r\nexport const getSlotCount = state => state.slots.length;\r\nexport const getSlotOptionsModalIndex = state => state.slotOptionsModal.index;","import {ADD_SLOT_TIME} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index, time){\r\n\treturn {type: ADD_SLOT_TIME, payload: {index, time}};\r\n}","export const STATE = \"STATE\";\r\nexport const SET_SLOT = \"SET_SLOT\";\r\nexport const SET_SLOTS_COUNT = \"SET_SLOTS_COUNT\";\r\nexport const ADD_SLOT_TIME = \"ADD_SLOT_TIME\";\r\nexport const CLEAR_SLOT = \"CLEAR_SLOT\";\r\nexport const MUTE_SLOT = \"MUTE_SLOT\";\r\nexport const OPEN_SLOT_OPTIONS_MODAL = \"OPEN_SLOT_OPTIONS_MODAL\";\r\nexport const CLOSE_SLOT_OPTIONS_MODAL = \"CLOSE_SLOT_OPTIONS_MODAL\";","import {CLEAR_SLOT} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index){\r\n\treturn {type: CLEAR_SLOT, payload: {index}};\r\n}","import {CLOSE_SLOT_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\n\r\nexport default function(){\r\n\treturn {type: CLOSE_SLOT_OPTIONS_MODAL};\r\n}","import {OPEN_SLOT_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\n\r\nexport default function(index){\r\n\treturn {type: OPEN_SLOT_OPTIONS_MODAL, payload: index};\r\n}","import React, {Component} from 'react';\r\n\r\nconst dateUpdateHandlers = new Set();\r\n\r\nexport default (dateProp='date') => (Cmp) => class InjectDateComponent extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdate: Date.now(),\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdateUpdateHandlers.add(this.updateDate);\r\n\t}\r\n\r\n\tupdateDate = (date) => {\r\n\t\tthis.setState({\r\n\t\t\tdate: date,\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdateUpdateHandlers.delete(this.updateDate);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst props = {...this.props, [dateProp]:this.state.date};\r\n\t\treturn (<Cmp {...props}/>);\r\n\t}\r\n}\r\n\r\nsetInterval(() => {\r\n\tfor (const handler of dateUpdateHandlers) handler(Date.now());\r\n}, 1000);","import React, {Component, PureComponent} from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n// import {getSlots} from \"../selectors/selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport openSlotOptionsModal from \"../actionCreators/openSlotOptionsModal\";\r\nimport injectDate from \"../HOCs/injectDate\";\r\nimport timeFormat from \"../util/timeFormat\";\r\nimport classNames from \"classnames\";\r\n\r\nclass Slot extends Component {\r\n\trender() {\r\n\t\tconst {slot, index} = this.props;\r\n\t\tif (slot && slot.date != null) {\r\n\t\t\treturn <SlotWithTime slot={slot} index={index} onClick={this.click}/>\r\n\t\t} else {\r\n\t\t\treturn <EmptySlot slot={slot} index={index} onClick={this.click}/>\r\n\t\t}\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslot: PropTypes.object,\r\n\t\tindex: PropTypes.number,\r\n\t\topenSlotOptionsModal: PropTypes.func,\r\n\t};\r\n\r\n\tclick = () => {\r\n\t\tthis.props.openSlotOptionsModal(this.props.index)\r\n\t}\r\n}\r\nexport default connect(() => ({}), mapDispatchToProps)(Slot);\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn bindActionCreators({\r\n\t\topenSlotOptionsModal: openSlotOptionsModal,\r\n\t}, dispatch)\r\n}\r\n\r\nconst SlotWithTime = injectDate('date')(class SlotWithTime extends PureComponent {\r\n\trender() {\r\n\t\tconst {slot, index, onClick} = this.props;\r\n\t\tconst dateDiff = slot && slot.date ? slot.date - this.props.date : null;\r\n\t\tconst slotWait = dateDiff != null && dateDiff > 0;\r\n\t\tconst slotLate = dateDiff != null && dateDiff <= 0;\r\n\t\tconst slotDisplayTime = !(slotWait || slotLate) ? 0 : timeFormat(Math.abs(dateDiff));\r\n\t\treturn (\r\n\t\t\t<a\r\n\t\t\t\tclassName={classNames(\"slot\", {\"late\": slotLate, \"wait\": slotWait})}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"slot-index\">{index+1}</div>\r\n\t\t\t\t{ (slotWait || slotLate) && <div className=\"slot-time\">\r\n\t\t\t\t\t{slotDisplayTime}\r\n\t\t\t\t</div>}\r\n\t\t\t</a>\r\n\t\t);\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslot: PropTypes.object,\r\n\t\tindex: PropTypes.number,\r\n\t\tdate: PropTypes.number,\r\n\t}\r\n});\r\n\r\nconst EmptySlot = ({index, onClick}) => (\r\n\t<a className=\"slot\" onClick={onClick}>\r\n\t\t<div className=\"slot-index\">{index+1}</div>\r\n\t</a>\r\n);","export default function (value){\r\n\tconst sec = value/1000|0;\r\n\tconst displaySec = String(sec%60).padStart(2, '0');\r\n\tconst min = sec/60|0;\r\n\tconst displayMin = String(min%60).padStart(2, '0');\r\n\tconst hours = min/60|0;\r\n\treturn hours + ':' + displayMin + ':' + displaySec;\r\n}","import React, {Component, Fragment, PureComponent} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from \"redux\";\r\nimport addSlotTime from \"../actionCreators/addSlotTime\";\r\nimport clearSlot from \"../actionCreators/clearSlot\";\r\nimport closeSlotOptionsModal from \"../actionCreators/closeSlotOptionsModal\";\r\nimport openSlotOptionsModal from \"../actionCreators/openSlotOptionsModal\";\r\nimport injectDate from \"../HOCs/injectDate\";\r\nimport {getSlotOptionsModalIndex, getSlots} from \"../selectors/selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport Slot from \"./Slot\";\r\n\r\nclass SlotOptionsModal extends Component {\r\n\trender() {\r\n\t\tconst {slot, index} = this.props;\r\n\t\tconst modalOpen = index != null;\r\n\t\tconst dateDiff = slot && slot.date ? slot.date - this.props.date : null;\r\n\t\tconst slotWait = dateDiff != null && dateDiff > 0;\r\n\t\tconst slotLate = dateDiff != null && dateDiff <= 0;\r\n\t\treturn (\r\n\t\t\t<div className={classNames(\"modalDialog\", {open: modalOpen})}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Slot slot={slot} index={index}/>\r\n\t\t\t\t\t{(slotWait || !slotLate) && <div>\r\n\t\t\t\t\t\t<button onClick={this.addTime(10*1000)}>+10 cекунд</button>\r\n\t\t\t\t\t\t<button onClick={this.addTime(30*60*1000)}>+30 минут</button>\r\n\t\t\t\t\t\t<button onClick={this.addTime(60*60*1000)}>+60 минут</button>\r\n\t\t\t\t\t\t<button onClick={this.addTime(90*60*1000)}>+90 минут</button>\r\n\t\t\t\t\t\t<button onClick={this.addTime(120*60*1000)}>+120 минут</button>\r\n\t\t\t\t\t\t<button onClick={this.clearSlot}>Очистить</button>\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t\t{(slotLate) && <div>\r\n\t\t\t\t\t\t<button onClick={this.clearSlot}>Очистить</button>\r\n\t\t\t\t\t</div>}\r\n\r\n\r\n\t\t\t\t\t<button onClick={this.close} type=\"button\">\r\n\t\t\t\t\t\tЗакрыть\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\taddTime = (time) => {\r\n\t\treturn () => {\r\n\t\t\tthis.props.addSlotTime(this.props.index, time);\r\n\t\t}\r\n\t};\r\n\r\n\tclearSlot = () => {\r\n\t\tthis.props.clearSlot(this.props.index);\r\n\t};\r\n\r\n\tclose = () => {\r\n\t\tthis.props.closeSlotOptionsModal()\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tslot: PropTypes.object,\r\n\t\tindex: PropTypes.number,\r\n\t\tcloseSlotOptionsModal: PropTypes.func,\r\n\t};\r\n\r\n}\r\nexport default injectDate('date')(connect(mapStateToProps, mapDispatchToProps)(SlotOptionsModal));\r\n\r\nfunction mapStateToProps(state) {\r\n\tconst index = getSlotOptionsModalIndex(state);\r\n\tconst slots = getSlots(state);\r\n\treturn {\r\n\t\tindex: index,\r\n\t\tslot: slots[index],\r\n\t}\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn bindActionCreators({\r\n\t\tcloseSlotOptionsModal: closeSlotOptionsModal,\r\n\t\taddSlotTime: addSlotTime,\r\n\t\tclearSlot: clearSlot,\r\n\t}, dispatch)\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {getSlots} from \"../selectors/selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport Slot from \"./Slot\";\r\n\r\nclass Slots extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Slots ({this.props.slots.length}) </h1>\r\n\t\t\t\t<div className=\"slots\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.slots.map((slot, index) => (\r\n\t\t\t\t\t\t\t<Slot key={index} slot={slot} index={index} />\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslots: PropTypes.array,\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tslots: getSlots(state),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Slots);","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {getSlotCount} from \"../selectors/selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport SlotOptionsModal from \"./SlotOptionsModal\";\r\nimport Slots from \"./Slots\";\r\n\r\nclass Main extends Component {\r\n\trender() {\r\n\t\tif (this.props.slotsCount <= 0) {\r\n\t\t\treturn (<div>Все еще нет слотов</div>);\r\n\t\t}\r\n\t\treturn <Fragment>\r\n\t\t\t<Slots/>\r\n\t\t\t<SlotOptionsModal/>\r\n\t\t</Fragment>\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tslotsCount: PropTypes.number,\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tslotsCount: getSlotCount(state),\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Main);","import {CLOSE_SLOT_OPTIONS_MODAL, OPEN_SLOT_OPTIONS_MODAL} from \"../constants/actions\";\r\n\r\nconst defaultState = {\r\n\tindex: null,\r\n};\r\n\r\nexport default function(slotOptionsModalState = defaultState, action){\r\n\tswitch (action.type) {\r\n\t\tcase OPEN_SLOT_OPTIONS_MODAL: {\r\n\t\t\treturn {...slotOptionsModalState, index: action.payload};\r\n\t\t}\r\n\t\tcase CLOSE_SLOT_OPTIONS_MODAL: {\r\n\t\t\treturn {...slotOptionsModalState, index: null};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn slotOptionsModalState;\r\n\t\t}\r\n\t}\r\n}","import {combineReducers} from \"redux\";\r\nimport {STATE} from \"../constants/actions\";\r\nimport slotOptionsModalReducer from \"./slotOptionsModalReducer\";\r\nimport slotsReducer from \"./slotsReducer\";\r\n\r\nconst combine = combineReducers({\r\n\tslots: slotsReducer,\r\n\tslotOptionsModal: slotOptionsModalReducer,\r\n});\r\n\r\nexport default function(state, action){\r\n\tif (action.type === STATE) return action.payload;\r\n\treturn combine(state, action);\r\n}\r\n","import {ADD_SLOT_TIME, CLEAR_SLOT, SET_SLOT, SET_SLOTS_COUNT} from \"../constants/actions\";\r\nimport slotReducer from \"./slotReducer\";\r\n\r\n\r\nexport default function(slotsState = new Array(80).fill(null), action){\r\n\tswitch (action.type) {\r\n\t\tcase ADD_SLOT_TIME:\r\n\t\tcase CLEAR_SLOT:\r\n\t\tcase SET_SLOT: {\r\n\t\t\treturn slotsState.map((slot, index) => (\r\n\t\t\t\tindex === action.payload.index ? slotReducer(slot, action) : slot\r\n\t\t\t));\r\n\t\t}\r\n\t\tcase SET_SLOTS_COUNT: {\r\n\t\t\tconst newSlotsState = [...slotsState];\r\n\t\t\tnewSlotsState.length = action.payload;\r\n\t\t\treturn [...newSlotsState];\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn slotsState;\r\n\t\t}\r\n\t}\r\n}","import {ADD_SLOT_TIME, CLEAR_SLOT, SET_SLOT} from \"../constants/actions\";\r\n\r\n\r\nexport default function(slotState = null, action){\r\n\tswitch (action.type) {\r\n\t\tcase SET_SLOT: {\r\n\t\t\tconst slot = slotState || {};\r\n\t\t\treturn {...action.payload.slot, slot};\r\n\t\t}\r\n\t\tcase CLEAR_SLOT: {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tcase ADD_SLOT_TIME: {\r\n\t\t\tconst slot = slotState || {};\r\n\t\t\tconst date = slot.date || Date.now();\r\n\t\t\treturn {...slot, date: date + action.payload.time};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn slotState;\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\nimport './App.css';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport updateState from \"./actionCreators/updateState\";\nimport Main from \"./components/Main\";\nimport {loadState, localStorageKey, saveState} from \"./localStorage\";\nimport reducer from './reducers/reducer';\nimport { Provider } from 'react-redux';\n\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || compose;\nconst store = createStore(reducer, loadState(), composeEnhancers(\n    applyMiddleware()\n));\n\nwindow.addEventListener('storage', function({key, newValue}){\n    if (key !== localStorageKey) return;\n    try {\n        const data = JSON.parse(newValue);\n        store.dispatch(updateState(data));\n    } catch (e) {\n        console.error(e);\n    }\n});\n\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\nwindow.store = store;\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <Main/>\n      </Provider>\n  );\n}\n\nexport default App;\n","export const localStorageKey = 'state';\r\n\r\nexport const loadState = () => {\r\n\ttry {\r\n\t\tconst data = localStorage.getItem(localStorageKey);\r\n\t\tif (data == null) return undefined;\r\n\t\treturn JSON.parse(data);\r\n\t} catch (e) {\r\n\t\tconsole.error(e);\r\n\t\treturn undefined;\r\n\t}\r\n};\r\n\r\nexport const saveState = (state) => {\r\n\ttry {\r\n\t\tconst data = JSON.stringify(state);\r\n\t\tlocalStorage.setItem(localStorageKey, data);\r\n\t} catch (e) {\r\n\t\tconsole.error(e);\r\n\t}\r\n};","import {STATE} from \"../constants/actions\";\r\n\r\n\r\nexport default function(state){\r\n\treturn {type: STATE, payload: state};\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}